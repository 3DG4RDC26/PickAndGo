<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2CirclePictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxESEhISExARFRUVERcRFhcYFRUQFRAQFhUWFhUVFRUY
        HTQgGBolGxcWLTMhJisrLi4vFx80OD8tNygtMCv/2wBDAQoKCg4NDhoQEBsvJSAlLS0tLS4rLS0tLS0v
        LS0tLS0tLy43LS0wLS0tLS0uNS01LS0tLS0tLS0tLy0tLS0tLS3/wAARCADhAOEDAREAAhEBAxEB/8QA
        GwABAAIDAQEAAAAAAAAAAAAAAAQFAQIDBgf/xAA9EAACAQIEAwQIBAQFBQAAAAAAAQIDEQQSITEFQVEi
        YXGRBhMyUoGhsdFCwdLwFCOS8RZDYnKiFSRzwuH/xAAaAQEAAwEBAQAAAAAAAAAAAAAAAQIDBAUG/8QA
        NBEBAAICAAQDBgQGAgMAAAAAAAECAxEEEiExE0FRBRQiYaHwMnGR4RVCgcHR8WKxIzNS/9oADAMBAAIR
        AxEAPwD7iAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAImK4lSpvLKdn0ScmvGy0KTesd0xDi+OYf33/AEz+xHi1
        Tyyx/wBcw/vv+if2Hi1OWWHx2h70v6Zfmh4tTklh8eo9ZeRHjVTyS1/6/R6T8o/ceNU8OR+kFL3Z/wDH
        9RHj1OSWH6Q0vdqeUf1DxqnJLC9I6Pu1P+H6iI4ik9kzitHc/wAQ0vdqf8P1E+PVHJI/SKl7tTyj+oeP
        U5Jaf4mo+5V8o/qHjVPDkfpNR92r5R/UPGqeHIvSej7tXyj+oeNU5JWuFxMKkVOErp/DXo09jWLRMbhW
        Y07EoAAAAAAAAAAAAAAUHF+OWvCk9dnLp3R7+8wvl8oTEPOt8zBbZcnSNlyq8NFXjmy5o5kr5brMl1tv
        bVeY3G9b6r8lorza6evk3E9BAxvFYQTSazXsm03G/wCeh52b2jTUxj6z9Hp8P7NveYm/SPqgYfjFWpK6
        cFGLWaPOXOSSe3Kz56nLbj71vE27fL0dlvZ2OtJrEdfKZT58Skv8mp3bdru0uX/i9J7R5+vl+jl/hfrf
        6KKtxSpSa9dTmm7u/PXZJJaPrt8Dg14mScmK2p/R61cVJrFY6x9GlP0jk/YqSstHnhmV9Nmtb91ztx5+
        Ixxq0xLG/s7BbvXX5Tr9lxheLydnUhFRa0nGWZN98bXj87HTh9oY7W5bdJedn9mTSN4538ljmuejE7eZ
        Ma7sDaNhCEzhvEZ0ZXjqn7UeUl+T7y1LzWUTES9pgcbCrHNB+K5xfRo7K2i0bhlMaSCyAAAAAAAAAAAx
        J21e2/ggPM8Z4y53hTbUdm9nPu7l9Tmvk30hMQpTJLBnmtauO0176nX5tcNYtaIn1QK3EFmyQtKV8tlq
        +vXTvPAj2rxWt2iI+ev3e3X2ZhiN23+rhWxFZSd5PRW7KjJXezu479xSvtPPPWLfSG8cDw8x+H6z/lX4
        fH0oVLVXLZtt9lwlte/NNGdoy3+Oszv5T3dU4pmvLSI/LyZ4jOi4pJ2u7rM76bvR/XuKUnLNuszOm+Kl
        otvX6I9Wi3TcoqTtu03r8C8ZPi1K29W1ZDpuevZimndycVGUbvZ69TS3L6/0RMRK84dxeUUo1XFrRKaa
        WrdrSV/mvicObhonrT9HNfF16JvE+GRxELKrJX1vo7fHexjh4i2G+5jbOuSad4eMo4KVGbWZSjdxbldZ
        3vrro07+Z7NssZK71qfk6JmZ6r2EYOMf5kUratZm7d+pwzNot2V6o1SpVpSvRqZob21lpfV72+XI7cHF
        XrXl3qfvy0xycPiyfjr1XOC4vTqWTeWW1npd9E9r9256+HiK3iNz1eLxHBXxTMxG6/fdYHTpwTIDaRgc
        ZOjPPB+K5SXRk1tNZ3Cek93ucFio1YKcdn5xfNPvO2totG4ZTGncsgAAAAAAAAAeY41xT1jyQfYW799/
        Y5smTfSExCnsZJaTqQj7Uop9G0jK+elJ1aYhvjwZLxutZlCxfEKfZSlmTerj2lls+fiv3c832jxMTiml
        Z6y9LgeDvW/PaNa7fmocbi6Ga9JznZptWlTSSbvyV1utNPI8utL9r6j6vexxaa6t0WVLjVJJyytKy0Sc
        ktNb2vblqYzgtE6jX3+bG+C0d5Q6vEk5NwhNaNNtOKv4bN67lq4ZiNWlpSm46rCjiKFSCeRN7Wtmbdvl
        yMJpek62ztXJS3d2w2EqTzxSUU3fRtafArzdoruVL5a11MoXEfR2bWks0nLW/wAPy5/A3pxHJPxRqF8X
        FV82lfgU4RtGSk2+07JXXSzfyK14yLT16LRnrfrKDjMNXirRnOOuqvo42WltkjbHkxWnrESmIrKqqVJp
        OM6cbt3l+Fp+LureP5adcVrM7rLSK+jnVwtOpC8XKM17Ollbfdc728y9b2pOrdme4idO/BMVKnHZ5ucJ
        OOsrOzi72te2hnxOOt5+XrBrm7uuDjKcWoqKll7aeqUlzstn3lLzFLbmfPpKZiNfEveG8RnfJXSjO9k9
        lJ8l47nrcLxtMvwzPV4HGcByRz4u3nHp+y2uehp5TJAseC8SdGevsS9pdP8AUu9F8d+Sfkmer20ZJpNO
        6aun1R2M2QAAAAAAAKTjuP8A8uL/ANz/APX7/wBzDLfyhMQ8+4mCxNqKbeyMsmSKVm09oa4sU3tFa95e
        V4jOcs79W5Xza2ltqlqn3LpsfLzeLZOabPrMVK0iK9ln6PY2NSnFaXisr23Wj/fecXE4Zpkn5sM1Zidw
        qOO8JcazcWlGas1KzSe7tm0TO3hc268s94dGHLunVNwvD6EYKKhaUY3bztWfju9+hnky33M2ne1LXvM/
        s4T4Um1OnBa6SaqSkpLXqlzIjiNRy2n6QvGTXS0mEw2VyTunGyTsoL4X5ba973Jvfm1r/K98kTEJeMx2
        TL/PVKPs3Xb/AKmk2n46FMVJtMxEf2/2wrSJifh2747jFGMM8sSmmr3i01LvRHhZcl+XlnbOmKf/AJ/V
        5/AcSrSrxq/zHRzWcZSlKUo20ajy187HZfBirTknU2+X+W98ccuq90zjnGIVJepo5Xe027N2hZ5U0ltf
        d9xlh4fkib23ry7bOHxTXrdTcTxiUvVzcZSjZPXLUi3t2Wu0ra7nThxTrnr0j6fs15q94c6bnGPai7JX
        9lvTq8t38i08tp6T9Wdtd1bjcW20qUY+9to4+Mjpx44j8coid91hhOKU6lJzn2akY2upZVZb53sl9bnP
        fh70vy161n76LRfpvyXWH4pCvQuqaclGOaL3yKXTuV9eTRxX4e2LLqZ6b6fmz113HaV7hneK1b0WvVNJ
        p+TPpuEz+Lii3n5/nHd8zxWLw8kw7JHVMOUIHpfRbiH+TJ7aw8Ocf33m+G38qbR5vRG6gAAAAAEXiWK9
        XBte09I+PX4FL25YHln++9nIs0lEeSa93OtSUk4vZpp+DMMkRNZiXTimaWi0d3guM+so1lGc5qCyuM1e
        Le+mbrst9l3nkX4aK7isPpeHyxlpE+fm4cPxkaNaLTvGTzSV8zWuku9mOXHbJjn1js6LxzxMPbYycKis
        1eMuy349H1PIjcTzR3hw44tR5bi3/bzipRSg4u3JNxW172u1b5no4v8AzROu7vx3546NcDxCtrOm4JXy
        2zX1utJK2uhN8OOPhtvab0pPSya8TXlmVTK1bKko5u1un36rbQwmmOuuXp/Vly0/lV1f0VjUcqlalBK2
        ZtXjok90uZ0V9oWxxFccyztGK067ovC6eCzwl6pxUb5b+znv2ZuL3kley+xrmtxHLMc299/X5x+TS2Ge
        Xo9RX4phpR1lG8erzO3ffn3HmVwZYnpE9WMUvEq6tClJrLKSlb2IKMXHNa6SlsdNZvWOvb1lvW1uzjS9
        H6E6nrK2aLirKTkoylp7T5Oytr9jT3rJFOXHMdVcuuk1jc/ROxHBJQvOjNuOXLraTfxW5zxxEW+G8ebO
        mXfSVTiOHSk7ZY66PeKk3um+V18up1Y89a9fRpOpjSRDB4SWVVaMI5eXtxTS7t+erO3HxVbT6fNyWwZY
        j4Z2vI8LoSSlGEY6LLKFou3c1yNLYYyR8pc3vNsc6lOhTUUklyt5HdwvD1xU5a/m8nic05L80h1uZmxQ
        bUarhKMo7xd14oROuqXvsNXU4RmtpJP/AOHbE7jakupIAAAADzPF8VnqO20eyvzfn9EYXnciFcy5U7LF
        ZhO2jiZ3jcN8d1bxfhyqxScVLK8yT0v3X5HHmxTkpqs6n1ehw/EeFbbz7wFCUsnqvVzf4ZJRcWuaa0ku
        /U8TL7xg/wDZ/t7OPPz15onafgKFSnmT7cbxtaNmlfVXb31+b2OeclLTE9vVGSa2iPKUHiNWpJxhKlJW
        d4549HfV7dTatKVjmi36NKRXUzEptHhlGSc7QhztC1s3erb/AL1Oec146TP692c5LR8LhxLicaajGEcz
        tyim1bntroXw8Pz2mZ7L0xzbrZDpzrVE41ZztLaDvdxe2bzWhtbw6zukdvNpy0rO6w70eESg5OyiraOy
        dk1q0ut+fQztxEW6d0TliVdUw6zRcW5Wk07q91pbTluzeL9JiejXrrUu2LqtXailpZKy8bX5K9iuOsT0
        2Ux76JGHqv8Ah51ZZFN5oxTTjZu+WV3polLlyK2iviRSPl+6mSNXikdvvog8F9JatOChUpJNvXtNuz6u
        1v2jXiOCpa02pb6MvC5+srLEcaUJr1lLs23umrNc7nNThZtT4bdVowzy7iUXFY7CyjOdOeSV3FxlGUbt
        bx1Wj7zWmLPExW0bj84K88fi7LT0ZxGeDUIyVKOkXK931Z7fBUvFZ5/2eJ7TmOfp3XLielWXj27sWLIL
        FZgYZA9L6J4m8Z03+F5l4S3+f1N8M+SJX5ugAAAIvE8R6um3zfZXi/tr5FbTqB5QwADKZExsbozmFoLG
        N6+bfHfyV/EeDU6rzuPbStGV2nHd6cufx5nNfHW/Sztx8TfHGqvP8ScacXDEQqq70rUszt0by6rvT0Z5
        F+Cy477x6mPSfv78np4uIjJqY/RW1uKU4QSp1alRX9qV4xik9LJ63uileHta27RES76V5usxEOGC4jVq
        xag1HvcJKLu9LS/Evoy+Th6Y5ibdf6m6T2d+GudCvllml6yLmnFuTk46K65K7dtOTM83LlxbjpqddUXi
        tq9Hp6DbqKo4QjNRyqLbT63vrfn+9uHmiI1WejktHwcu50jYzjE1PJOhd/7k013XRamDmjcXa4+Hia81
        bKDE4ybnL+W4q2iSu2n/AGOymKsVjrt1VjUdZTOGY+jpGcKl7O+mivu24/Azy4sm91mNKZK3n8MovpDx
        /D1ZQoUoudu1KMI+3JrSOfbTS/j8Dq4fhcuueY15R/r/AKclbcm+aduOD4Liqcv4ipGLzS1hBOcoQyNR
        i9LNbNu250cRSK0ilY/r89904M8XtMbWqwtR3UcO5p7Zk6Pq9Nk37S8Njix8Pe/Xevrtpkz1rrr/AHaY
        j0alKzlTktsyTi1JJqyvF3WxpTxqTrW1fe6csxt6XDUFCEYRVlGKSXRI+gxV1WHzXEZOa8y2Zq52CUNW
        SNWVkWPo5Xy14rlJOD8rr5pF8c6vA9mdaoAAAVnHaDlGLXJ7eP7+Znk7ImdPOyTWjVjJLFwMgZTImNje
        5SY8loltc5rV6umt+nVpOCe6K6aRb0Utf0Xw06jqShJtu7jmag34L6bFfBrvbrjj8sV5YlY1cDCUMjSU
        eVrLLbaxnl4et40pj4q1Z2jUuBxi5SpzcJy3lZSb7teW2istDz7+zrT0mdxHZ0+/xPS0I2J4DUlr/EWf
        /j5/CRNPZ8Vju1rx8R/L9XCtwnF3i89GSX+5Sfem1p5sy/h/LvTavGYfSWcPwGs23Ot6tdIWnJ+LkrJf
        BmlOCifx/f3+amTjqR+GHXEejUZQcXXqyvvfLHMucXkinZ+Jt7pWvXHEb+e9f3Ye+zv4o6fJ14dwHD0N
        adKMX1td+bO/ThtmvbvKxSImqsXls2RynNMsMvWvVna2nFs6ojTlmdy1bJQ1bJgatiRo2VEjBwkpQnZ6
        Ti/HtLQrzatC1Y298egzAAADEopqzExsV+J4antZ+Oj8zGcforr0VWJ4bl6rx+5Sdx3RzTHdElhZLvI2
        ReHNwa3TItbTSup82qkZzlaRilumY822mtQ3iyszG0xEtZ7lolMblm5VYzEjZFNJ5tNZzGlolpKoTyom
        Za5xqIGJyJhWWvrNBJEdTPsUmV4gnJPYmt5hW1Inu4ORtXLtjbDrzZUJPZNm0WiWUxp1hgaj5WI54hVJ
        ocIb6vwV/mV55t+GNpWeG4G+kY+Pafy0+ZeMOS3fp9/fmbWmG4fCDvvLq+XguRvjwVpO+8o2lmyAAAAA
        AAHGphYPeK+Gn0KzSs+SJiJR58Mjycl5NFfDhXw4R58IfWL8U0UnFKOWY7Sjz4Q/cT8GvzM5wfJfnyR5
        uUuGSX4Z+V/oUnh49JWjNkhwqcOf+tfBr8iPBiE+839Gn8E/e/L6lfBj1W95n0YWDa/EvNfcicXzT7xH
        o3WFl1j5r7keD80zxET5NZYKT/FHzX3HhfNaOJj0c3w9+/HzX3J8P5o95j0YWA/1oiccep7z8mz4ff8A
        F5f2EY49UTxE+jaPCX0m/CL+xbwo9JR7xb0docGb/BP46fURg/4yjx8iRT4I/cS8X9i8YLekff6qzkvP
        eUmnwbvivBXLxgt6qpUOGQW7b8l+Vy0cNXzmR2hhIL8K+Pa+ppXDjjtBt3NQAAAAAAAAAAAAAAAAAAGH
        FdERqBj1cfdXkhqA9Wui8hqAyLovIagZSJGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//2Q==
</value>
  </data>
</root>